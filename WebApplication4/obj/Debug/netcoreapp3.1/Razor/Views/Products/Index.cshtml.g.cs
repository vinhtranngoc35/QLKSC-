#pragma checksum "/Users/vinhtran/Downloads/WebApplication4/WebApplication4/Views/Products/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8692306f1d528e91497a88c43c583f4051d1c26e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Products_Index), @"mvc.1.0.view", @"/Views/Products/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/vinhtran/Downloads/WebApplication4/WebApplication4/Views/_ViewImports.cshtml"
using WebApplication4;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/vinhtran/Downloads/WebApplication4/WebApplication4/Views/_ViewImports.cshtml"
using WebApplication4.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8692306f1d528e91497a88c43c583f4051d1c26e", @"/Views/Products/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9fff4eb847734ec2c3f91807e9b1a08bbda85e45", @"/Views/_ViewImports.cshtml")]
    public class Views_Products_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<WebApplication4.Models.Product>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formAddEditStudent"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "/Users/vinhtran/Downloads/WebApplication4/WebApplication4/Views/Products/Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">
<h1>Index</h1>

<p>
    <a class=""btn btn-success"" onclick=""student.openModal();"">Create New</a>
</p>
<table class=""table"">
    <thead>
        <tr>
            <th>
                ");
#nullable restore
#line 16 "/Users/vinhtran/Downloads/WebApplication4/WebApplication4/Views/Products/Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </th>\r\n            <th>Price</th>\r\n            <th>Company</th>\r\n            \r\n            <th>Quantity</th>\r\n            <th>\r\n                ");
#nullable restore
#line 23 "/Users/vinhtran/Downloads/WebApplication4/WebApplication4/Views/Products/Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Type));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            </th>
            <th> Action</th>
        </tr>
    </thead>
    <tbody id=""tbProduct"">
    </tbody>
</table>
            </div>

<!-- The Modal -->
<div class=""modal"" id=""addEditStudent"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">

            <!-- Modal Header -->
            <div class=""modal-header"">
                <h4 class=""modal-title"">Create Product</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>

            <!-- Modal body -->
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8692306f1d528e91497a88c43c583f4051d1c26e6065", async() => {
                WriteLiteral(@"
                    <input hidden name=""id"" id=""id"" value=""0"">
                    <div class=""row form-group"">
                        <div class=""col-3"">
                            <label>Name</label>
                        </div>
                        <div class=""col-9"">
                            <input class=""form-control"" type=""text""
                                   name=""name"" id=""name""
                                   data-rule-required=true>
                        </div>
                    </div>
                    <div class=""row form-group"">
                        <div class=""col-3"">
                            <label>PriceProduct</label>
                        </div>
                        <div class=""col-9"">
                            <input class=""form-control"" type=""text""
                                   name=""name"" id=""price""
                                   data-rule-required=true>
                        </div>
                    </div>
           ");
                WriteLiteral(@"         <div class=""row form-group"">
                        <div class=""col-3"">
                            <label>Company</label>
                        </div>
                        <div class=""col-9"">
                            <input class=""form-control"" type=""text""
                                   name=""name"" id=""company""
                                   data-rule-required=true>
                        </div>
                    </div>
                    <div class=""row form-group"">
                        <div class=""col-3"">
                            <label>TypeProduct</label>
                        </div>
                        <div class=""col-9"">
                            <select class=""form-control""
                                    id=""typeProduct""
                                    data-rule-required=true></select>
                        </div>
                    </div>
");
                WriteLiteral(@"                <div class=""row form-group divUpload"">
                    <label for=""file-upload"" class=""custom-file-upload"">
                        +
                        <img id=""blah"" src=""#"" alt=""your image"" />
                    </label>
                    <input id=""file-upload"" type=""file"" onchange=""readURL(this)"" />
                    
                  
                </div>


                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>

            <!-- Modal footer -->
            <div class=""modal-footer"">
                <a href=""javascript:;"" class=""btn btn-primary""
                   onclick=""student.save()"">Save</a>

                <button type=""button"" onclick=""student.reset();"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>
        </div>
    </div>
</div>
<style>
    input[type=""file""] {
        display: none;
    }
    .custom-file-upload {
        width:160px;
        height:160px;

        border: 1px solid #ccc;
        display: inline-block;
        padding-top: 37px;
        cursor: pointer;
        font-size: 60px;
        text-align: center;
    }
    #blah {
        display: none;
        margin-top: -129px;
    }
    img {
        width: 100px;
        height: 100px;

    }
    .divUpload {
       
        overflow: hidden;
    }

   
    
</style>
<script src=""https://ajax.googleapis.com/aj");
            WriteLiteral(@"ax/libs/jquery/3.4.1/jquery.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js""></script>

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result)
                    .width(160)
                    .height(160);
                $('#blah').css(""display"", ""block"");  
               
            };
            reader.readAsDataURL(input.files[0]);
           
        }
    }
  
    var student = {} || student;
    student.initClass = function () {
        $.ajax({
            url: ""api/TypesApi/"",
            method: ""GET"",
            dataType: """);
            WriteLiteral(@"json"",
            success: function (data) {
                $('#typeProduct').empty();
                $.each(data, function (i, v) {
                    $('#typeProduct').append(
                        ""<option value='"" + v.id + ""'>"" + v.name + ""</option>""
                    );
                });
            }
        });
    };


    student.drawTable = function () {
     
        $.ajax({
            url: ""Rooms/api/ProductsApi"",
            method: 'GET',
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                console.log(data)
                $('#tbProduct').empty();
                var i = 0;
                $.each(data, function (i, v) {
                    $('#tbProduct').append(
                        ""<tr>"" +
                        ""<td>"" + v.name + ""</td>"" +
                        ""<td>"" + v.priceProduct + ""</td>"" +
                        ""<td>"" + v.company + ""</td>"" +
                  ");
            WriteLiteral(@"      
                        ""<td>"" + v.quantity + ""</td>"" +
                        ""<td>"" + v.type.name + ""</td>"" +
                        ""<td>"" +
                        ""<a href='javascript:;' title='edit student' onclick='student.get("" + v.id + "")'><i class='fa fa-edit'></i></a> "" +
                        ""<a href='javascript:;' title='remove student' onclick='student.delete("" + v.id + "")' ><i class='fa fa-trash'></i></a>"" +
                        ""</td>"" +
                        ""</tr>""
                    );
                });
            }
        });
    };

    student.openModal = function () {
      
        $('#addEditStudent').modal('show');
    };

    student.save = function () {
       
        if ($('#id').val() == 0) {
            var formData = new FormData();
            var file = $('#file-upload').get(0).files;
            formData.append('files', file[0]);
            formData.append('name', $('#name').val());
            formData.append('priceProduct',");
            WriteLiteral(@" $('#price').val());
            formData.append('typeId', $('#typeProduct').val());
            formData.append('company', $('#company').val());
            console.log(formData.files);
            $.ajax({
                url: ""Rooms/api/ProductsApi/Images"",
                type: ""POST"",
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    toastr.info(""Created Success"");
                   
                    $('#addEditStudent').modal('hide');
                    student.reset();
                    student.drawTable();
                }
            });
        } else {
            var formData = new FormData();
            var file = $('#file-upload').get(0).files;
            formData.append('id', $('#id').val());
            formData.append('files', file[0]);
            formData.append('urlImage', document.getElementById('blah').src)
            formData.append('nam");
            WriteLiteral(@"e', $('#name').val());
            formData.append('priceProduct', $('#price').val());
            formData.append('typeId', $('#typeProduct').val());
            formData.append('company', $('#company').val());

                $.ajax({
                    url: ""Rooms/api/ProductsApi/"" + $('#id').val(),
                    type: ""PUT"",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {

                        let check = true;
                        if (data != null) {
                            $('#id').val(data.id);
                            if (data.name !== productOld.name && $('#name').val() != data.name) {
                                alert('Name Đã được thay đổi');
                                $('#name').val(data.name);
                                check = false;
                            }
                            if (data.priceProduct != productOld.p");
            WriteLiteral(@"riceProduct && $('#price').val() != data.priceProduct) {
                                alert('Price Đã được thay đổi');
                                $('#price').val(data.priceProduct);
                                check = false;
                            }
                            if (data.typeId !== productOld.type.id && $('#typeProduct').val() != data.typeId) {
                                alert('Type Đã được thay đổi');
                                document.getElementById(""typeProduct"").value = data.typeId;
                                check = false;
                            }
                            if (data.company !== productOld.company && $('#company').val() != data.company) {
                                alert('Company Đã được thay đổi');
                                $('#company').val(data.company);
                                check = false;
                            }
                            if (data.urlImage !== productOld.urlImage && docum");
            WriteLiteral(@"ent.getElementById('blah').src != '/Upload/'+data.urlImage) {
                                alert('Src Đã được thay đổi');
                                document.getElementById('blah').src = '/Upload/' + data.urlImage;
                                check = false;
                            }
                            if (check) {
                                $('#addEditStudent').modal('hide');
                            }
                            student.drawTable();

                        } else {
                            toastr.info(""Edited Success"");
                            $('#addEditStudent').modal('hide');
                            student.reset();
                            student.drawTable();
                        }

                    }
                });
            

        }
        if ($('#id').val() == 0) {
            bootbox.alert(""Created Room"");
            $('#addEditStudent').modal('hide');
            student.drawTable();
       ");
            WriteLiteral(@" }
    };

    student.delete = function (id) {
        bootbox.confirm({
            title: ""Remove Room"",
            message: ""Do you want to remove this room?"",
            size:'small',
            buttons: {
                cancel: {
                    label: '<i class=""fa fa-times""></i> No'
                },
                confirm: {
                    label: '<i class=""fa fa-check""></i> Yes'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        url: ""http://localhost:8080/api/product/"" + id,
                        method: ""DELETE"",
                        dataType: ""json"",
                        success: function (data) {
                            toastr.info(""Deleted Success"");
                            student.drawTable();
                        }
                    });
                }
            }
        });
    };
    let name = '';
    let product");
            WriteLiteral(@"Old = {};
    student.get = function (id) {
        $.ajax({
            url: ""Rooms/api/ProductsApi/"" + id,
            method: ""GET"",
            dataType: ""json"",
            success: function (data) {
                student.reset();
                console.log('""'+data[0].urlImage+'""');
                productOld = data[0];
                $('#id').val(data[0].id);
                $('#name').val(data[0].name);
                $('#price').val(data[0].priceProduct);
                $('#company').val(data[0].company);
     
                $('#blah')
                    .attr('src', '/Upload/' + data[0].urlImage)
                    .width(160)
                    .height(160);
                $('#blah').css(""display"", ""block"");  
                $('#typeProduct option[value=' + data[0].type.id + ']').attr('selected', 'selected');
                $('#addEditStudent').modal('show');
            }
        });
    };
    student.cutString = function (str) {
        let indexCut = 0;
");
            WriteLiteral(@"        for (let i = 0; i < str.length; i++) {
            if (str[i] === ""_"") {
                indexCut = i;
                break;
            }
        }
        return str.slice(indexCut, str.length);
    }
    student.reset = function () {
        $('#name').val('');
        $('#price').val('');
        $('#file-upload').val('');
        $('#company').val('')
        $('#id').val('0');
        document.getElementById('blah').src = '';
        document.getElementById('blah').style.display = 'none';

    };




    student.init = function () {
        student.drawTable();
        student.initClass();
    };

    $(document).ready(function () {
        student.init();
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<WebApplication4.Models.Product>> Html { get; private set; }
    }
}
#pragma warning restore 1591
